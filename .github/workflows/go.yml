# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  APP_DB_USERNAME: postgres
  APP_DB_PASSWORD: password
  APP_DB_NAME: postgres

jobs:

  build:
    name: Build and Test Code
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.22'

    - name: Setup postgresql container
      run: docker run --name postgres -p 5432:5432 -e POSTGRES_PASSWORD=${APP_DB_PASSWORD} -e POSTGRES_USER=${APP_DB_USERNAME} -e POSTGRES_DB=${APP_DB_NAME} -d postgres

    - name: Build
      run: go build -v ./...

    - name: Test
      run: go test -v ./...

  sonarcloud:
    needs: build
    name: Code Analysis (SonarCloud)
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
        # Disabling shallow clone is recommended for improving relevancy of reporting
          fetch-depth: 0
      
      - uses: sonarsource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  vulnerability_scan:
    needs: sonarcloud
    name: Vulnerability Scan (trivy)
    runs-on: ubuntu-latest

    steps:
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: 'docker.io/my-organization/my-app:${{ github.sha }}'
        format: 'sarif'
        output: 'trivy-results.sarif'

    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v2
      with:
        sarif_file: 'trivy-results.sarif'

  dockerhub_deploy:
    needs: sonarcloud
    name: Build and Deploy to Dockerhub
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v2
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and push
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: sweidlinger/cicd-microservices:latest , sweidlinger/cicd-microservices:${{ github.sha }}